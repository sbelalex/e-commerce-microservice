---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS - VPC'

Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Default: 'eu-west-1a, eu-west-1b'

Resources:
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: 'eks-ecommerce'
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: ecommerce-eks-vpc

  subnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value: ecommerce-eks-vpc-a

  subnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value: ecommerce-eks-vpc-b
  subnetARouteTable:
      Condition: PrivateSubnetsCondition
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: VPC
        Tags:
        - Key: Name
          Value: Private subnet 1A
        - Key: Network
          Value: Private
    subnetARoute:
      Condition: PrivateSubnetsCondition
      Type: AWS::EC2::Route
      Properties:
        RouteTableId:
          Ref: PrivateSubnet1ARouteTable
        DestinationCidrBlock: 0.0.0.0/0
        InstanceId:
          Fn::If:
          - NATInstanceCondition
          - Ref: NATInstance1
          - Ref: AWS::NoValue
        NatGatewayId:
          Fn::If:
          - NATGatewayCondition
          - Ref: NATGateway1
          - Ref: AWS::NoValue
    subnetARouteTableAssociation:
      Condition: PrivateSubnetsCondition
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId:
          Ref: PrivateSubnet1A
        RouteTableId:
          Ref: PrivateSubnet1ARouteTable

Outputs:
  VPCID:
    Value:
      Ref: VPC
    Description: VPC ID
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-VPCID"
  subnetAID:
    Description: SubnetA ID
    Value:
      Ref: subnetA
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-subnetAID"
  subnetBID:
    Description: SubnetB ID
    Value:
      Ref: subnetB
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-subnetBID"